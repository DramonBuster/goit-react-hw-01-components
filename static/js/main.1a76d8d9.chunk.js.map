{"version":3,"sources":["components/SocialProfile/SocialProfile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/ContainerMarkup/ContainerMarkup.module.css","components/TransactionHistory/Transaction.module.css","components/ContainerMarkup/ContainerMarkup.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/SocialProfile/SocialProfile.js","components/Statistics/StatisticsTableItem.js","components/Statistics/Statistics.js","components/TransactionHistory/TransactionItem.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","FriendItem","avatar","name","isOnline","item","status","style","backgroundColor","src","alt","width","defaultProps","FriendList","friends","map","id","SocialProfile","username","tag","location","stats","profile","description","label","quantity","followers","views","likes","TableItem","percentage","Math","floor","random","toString","Table","title","statistics","TransactionItem","type","amount","currency","TransactionHistory","items","App","user","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a76d8d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"SocialProfile_profile__a3uew\",\"description\":\"SocialProfile_description__2lbmM\",\"avatar\":\"SocialProfile_avatar__1EmMT\",\"name\":\"SocialProfile_name__VmZA7\",\"tag\":\"SocialProfile_tag__29Rp7\",\"location\":\"SocialProfile_location__2Gbt9\",\"stats\":\"SocialProfile_stats__30-qM\",\"item\":\"SocialProfile_item__15HFJ\",\"label\":\"SocialProfile_label__3J8_I\",\"quantity\":\"SocialProfile_quantity__RohwL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__RI-UF\",\"title\":\"Statistics_title__36lg6\",\"stat-list\":\"Statistics_stat-list__vYAGG\",\"item\":\"Statistics_item__1aJEe\",\"label\":\"Statistics_label__2UoqF\",\"percentage\":\"Statistics_percentage__r5w1O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend-list\":\"FriendList_friend-list__3F2-l\",\"item\":\"FriendList_item__1UK7X\",\"status\":\"FriendList_status__1xfor\",\"avatar\":\"FriendList_avatar__CWzkM\",\"name\":\"FriendList_name__1J6mZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContainerMarkup_container__V1KhV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction-history\":\"Transaction_transaction-history__3cn9n\"};","import PropTypes from 'prop-types';\nimport styles from './ContainerMarkup.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={styles.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport styles from './FriendList.module.css';\n\nconst FriendItem = ({ avatar, name, isOnline }) => {\n  return (\n    <li className={styles.item}>\n      <span\n        className={styles.status}\n        style={{ backgroundColor: `#${isOnline ? 'ff0000' : '008000'}` }}\n      ></span>\n      <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={styles.name}>{name}</p>\n    </li>\n  );\n};\n\nFriendItem.defaultProps = {\n  avatar: 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png',\n  name: 'No Name',\n  isOnline: false,\n};\n\nFriendItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendItem;\n","import PropTypes from 'prop-types';\nimport FriendItem from './FriendListItem';\nimport styles from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={styles['friend-list']}>\n      {friends.map(({ avatar, name, isOnline, id }) => (\n        <FriendItem key={id} avatar={avatar} name={name} isOnline={isOnline} />\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport styles from './SocialProfile.module.css';\n\nconst SocialProfile = ({ username, tag, location, avatar, stats }) => {\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={avatar} alt={username} className={styles.avatar} />\n        <p className={styles.name}>{username}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li className={styles.item}>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{stats.followers}</span>\n        </li>\n        <li className={styles.item}>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{stats.views}</span>\n        </li>\n        <li className={styles.item}>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nSocialProfile.defaultProps = {\n  username: 'User',\n  tag: 'yourtag',\n  location: 'Unknown',\n  avatar: 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png',\n};\n\nSocialProfile.propTypes = {\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default SocialProfile;\n","import PropTypes from 'prop-types';\nimport style from './Statistics.module.css';\n\nfunction getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nconst TableItem = ({ label, percentage }) => {\n  return (\n    <li className={style.item} style={{ backgroundColor: getRandomHexColor() }}>\n      <span className={style.label}>{label}</span>{' '}\n      <span className={style.percentage}>{percentage}%</span>\n    </li>\n  );\n};\n\nTableItem.defaultProps = {\n  label: 'Label',\n  percentage: 0,\n};\n\nTableItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n\nexport default TableItem;\n","import PropTypes from 'prop-types';\nimport TableItem from './StatisticsTableItem';\nimport style from './Statistics.module.css';\n\nconst Table = ({ title, stats }) => {\n  return (\n    <section className={style.statistics}>\n      {title && <h2 className={style.title}>{title}</h2>}\n\n      <ul className={style['stat-list']}>\n        {stats.map(({ id, label, percentage }) => (\n          <TableItem key={id} label={label} percentage={percentage} />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nTable.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default Table;\n","import PropTypes from 'prop-types';\n\nconst TransactionItem = ({ type, amount, currency }) => {\n  return (\n    <tr>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </tr>\n  );\n};\n\nTransactionItem.defaultProps = {\n  type: 'Type',\n  amount: 'Amount',\n  currency: 'Currency',\n};\n\nTransactionItem.propTypes = {\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n\nexport default TransactionItem;\n","import PropTypes from 'prop-types';\nimport TransactionItem from './TransactionItem';\nimport styles from './Transaction.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={styles['transaction-history']}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(({ id, type, amount, currency }) => (\n          <TransactionItem\n            key={id}\n            type={type}\n            amount={amount}\n            currency={currency}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import './App.css';\nimport Container from './components/ContainerMarkup/ContainerMarkup';\nimport FriendList from './components/FriendList/FriendList';\nimport Profile from './components/SocialProfile/SocialProfile';\nimport Table from './components/Statistics/Statistics';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport friends from './data/friends.json';\nimport user from './data/user.json';\nimport data from './data/data.json';\nimport items from './data/transactions.json';\n\nfunction App() {\n  return (\n    <Container>\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Table title=\"Upload statistics\" stats={data} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={items} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n// ================================\n\n// import React from \"react\";\n// import ReactDOM from 'react-dom';\n\n// const el1 = <span>Hello </span>;\n// const el2 = <span>world</span>;\n// const jsxElement = (\n//   <div>\n//     {el1}\n//     {el2}\n//   </div>\n// );\n// ReactDOM.render(jsxElement, document.querySelector('#root'));\n\n// console.log(jsxElement);\n// ================================\n"],"sourceRoot":""}